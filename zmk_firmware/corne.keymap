/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2

&mt {
    tapping-term-ms = <201>;
    flavor = "tap-preferred";
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        td_caps: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_TP";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        label = "Default keymap";

        default_layer {
            bindings = <
                &kp TAB   &kp Q &kp W &kp E    &kp R        &kp T                             &kp Y     &kp U        &kp I        &kp O       &kp P     &kp BSPC
                &kp LSHFT &kp A &kp S &kp D    &kp F        &kp G                             &kp H     &kp J        &kp K        &kp L       &kp SEMI  &kp SQT
                &kp LCTRL &kp Z &kp X &kp C    &kp V        &kp B                             &kp N     &kp M        &kp COMMA    &kp DOT     &kp FSLH  &kp ESC
                                        &kp LWIN &mo LOWER    &kp SPACE                         &kp RET   &mo RAISE    &kp RALT
            >;
        };

        lower_layer {
            bindings = <
                &kp trans  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7    &kp N8    &kp N9    &kp N0 &kp BSPC
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &trans &trans
                &kp LCTRL  &trans       &trans       &trans       &trans       &trans         &kp HOME &kp PG_DN &kp PG_UP &kp END   &trans &trans
                                                        &kp LWIN     &trans       &kp SPACE      &kp RET  &mo RAISE &kp RALT
            >;
        };

        raise_layer {
            bindings = <
                &kp trans &kp N1   &kp N2  &kp N3    &kp N4       &kp N5                      &kp N6    &kp N7    &kp N8    &kp N9   &kp N0   &kp DEL
                &kp LSHFT &trans   &trans &trans     &trans       &trans                      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
                &kp LCTRL &trans   &trans &trans     &trans       &trans                      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                                            &kp LWIN   &mo RALT     &kp SPACE                   &kp RET   &trans    &kp RALT
            >;
        };

        function_layer {
            bindings = <
                &trans &kp F12 &kp F7 &kp F8 &kp F9 &trans                                    &trans     &trans       &trans       &trans     &trans &trans
                &trans &kp F11 &kp F4 &kp F5 &kp F6 &trans                                    &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &trans &trans
                &trans &kp F10 &kp F1 &kp F2 &kp F3 &trans                                    &trans     &kp K_PP     &kp C_MUTE   &trans     &trans &trans
                                        &trans &trans &trans                                    &trans     &trans       &trans
            >;
        };

    };
};
