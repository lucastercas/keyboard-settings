/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2

&mt {
    tapping-term-ms = <201>;
    flavor = "tap-preferred";
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        td_caps: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_TP";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        label = "Default keymap";

        default_layer {
            bindings = <
                &kp TAB   &kp Q &kp W &kp E    &kp R        &kp T                                &kp Y     &kp U        &kp I        &kp O       &kp P     &kp BSPC
                &kp LSHFT &kp A &kp S &kp D    &kp F        &kp G                                &kp H     &kp J        &kp K        &kp L       &kp SEMI  &kp SQT
                &kp LCTRL &kp Z &kp X &kp C    &kp V        &kp B                                &kp N     &kp M        &kp COMMA    &kp DOT     &kp FSLH  &kp ESC
                                      &kp LWIN &mo LOWER    &kp SPACE                            &kp RET   &mo RAISE    &kp RALT
            >;
        };

        lower_layer {
            bindings = <
                &none &kp F12 &kp F7 &kp F8   &kp F9 &none                                       &none    &none     &none     &none     &none &kp DEL
                &none &kp F11 &kp F4 &kp F5   &kp F6 &none                                       &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &none &none
                &none &kp F10 &kp F1 &kp F2   &kp F3 &none                                       &kp HOME &kp PG_DN &kp PG_UP &kp END   &none &none
                                     &trans   &trans &trans                                      &trans   &trans    &trans
            >;
        };


    };
};
